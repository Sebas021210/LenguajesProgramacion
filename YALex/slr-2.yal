(* Lexer para Gramática No. 2 - Expresiones aritméticas extendidas *)

(* Introducir cualquier header aqui *)

let delim = ['\s' '\t' '\n']
let ws = delim+
let letter = ['A'-'D' 'a'-'d']
let digit = ['0'-'3']
let digits = digit+
let id = letter(letter|digit)*
let number = digits(digits)?(E['+' '-']?digits)?

rule tokens = 
  | ws        { return WHITESPACE }
  | id        { return ID }
  | number    { return NUMBER }
  | (+)       { return PLUS }
  | (*)       { return TIMES }
  | (-)       { return MINUS }
  | (/)       { return DIV }

(* Introducir cualquier trailer aqui *)