(* Lexer para Gramática No. 2 - Expresiones aritméticas extendidas *)

(* Introducir cualquier header aqui *)

let delim = ['\s' '\t' '\n']
let ws = delim+
let letter = ['A'-'Z' 'a'-'z']
let digit = ['0'-'9']
let digits = digit+
let id = letter(letter|digit)*
let number = digits(digits)?(E['+' '-']?digits)?

rule tokens = 
  | ws        
  | id        { print("Token: ID") }
  | number    { print("Token: NUMBER") }
  | (+)       { print("Token: PLUS") }
  | (*)       { print("Token: TIMES") }
  | (-)       { print("Token: MINUS") }
  | (/)       { print("Token: DIV") }
  | (LPAREN)  { print("Token: LPAREN") }
  | (RPAREN)  { print("Token: RPAREN") }

(* Introducir cualquier trailer aqui *)