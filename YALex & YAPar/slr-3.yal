(* Lexer para Gram√°tica No. 3 *)

(* Introducir cualquier header aqui *)

let delim = ['\s' '\t' '\n']
let ws = delim+
let letter = ['A'-'Z' 'a'-'z']
let str = (_)*
let digit = ['0'-'9']
let digits = digit+
let id = letter(letter|str|digit)*
let number = digits(digits)?(E['+' '-']?digits)?
let if_condition = ['if']
let else_condition = ['else']
let loop = ['while' 'for']

rule tokens = 
  | ws
  | if_condition   { return IF }
  | else_condition { return ELSE }
  | loop           { return LOOP }
  | id             { return ID }
  | (+)            { return PLUS }
  | (-)            { return MINUS } 
  | number         { return NUMBER }
  | (;)            { return SEMICOLON }
  | (:=)           { return ASSIGNOP }
  | (<)            { return LT }
  | (=)            { return EQ }
  | (*)            { return TIMES }
  | (/)            { return DIV }
  | (LPARENT)      { return LPARENT }
  | (RPARENT)      { return RPARENT }

(* Introducir cualquier trailer aqui *)